<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBMAAAEAIAD0CQAAFgAAACgAAAAgAAAAJgAAAAEAIAAAAAAAgAkAAAAAAAAAAAAAAAAAAAAA
        AAA6gJ7/WKW6/1mpwf9YqsL/ZLnS/2i0yv9xu9H/hszh/4/P5P97wtn/g8nd/5rV5f+b0uX/j87h/43R
        4/+Oy+P/iMji/4XE3/+Nx97/esTb/3C40P96v9n/a7HN/16kxf9Rosb/Spy8/0KIrP9BfZz/PXWR/zBZ
        av8PJS3/Bw4V/yY8Vf81SmP/M1B1/y1Pd/9EVnj/Mna1/yqd6P8znO3/L4/w/yGI8v8ojPL/Mo/s/zuJ
        4P86rPL/JbHz/y3K9f8cxvr/Frv5/xyl9v8cmPT/HZTt/yhtyP8acsz/F6X5/xig8P8cnOv/Eojb/xBq
        xf8QS57/Di9b/wUFDP8EAgL/Fyc+/w8mPv8LLlv/ABpJ/wY4df8Ec9X/AHnr/wCF9P8HofT/Eq70/wec
        8P8Bhvf/A1PJ/wCD4/874f//ZO/7/0Dc9P8m0fD/C8Lv/wOt8P8Avv//BHnL/wuB1/8RrOX/DLDj/wuw
        4v8UoNr/DJPd/wSA3v8LdcT/CTph/wICDv8wNE7/ITpP/xg2Wv8KKlf/FIra/wl/4f8apOz/QsXr/2Da
        7P800u3/FcDp/xul2f8Vi+H/FcP4/1Tn9P9Xy+b/c+Lz/4Tm9v965PL/Psrn/xi+6f8Nv/P/Gmmw/w3I
        9f8C3P//BNr//wnT+v8Wt+b/FKbj/wnA/f8NbrH/C0h3/yktR/8tO1L/ESxO/w1Vkv8Kkv//DaL4/znB
        5f914fP/auX7/x7d/f8A2v7/Dcf0/xOKyP8PxOr/HrHZ/z/t/P837v//Ku7+/zzt/f8+7P//KdPw/xeq
        3/8Qj9P/A9j//wDV//8C1P7/ANT+/wXa//8TteP/DcDt/wmDxf8KebT/ICc7/y40Sf8YHj3/EFy1/wmY
        /f8lstv/GNPz/xDg//8A2P3/ANf8/wTZ/f8A0P//HLjs/xbM7P8Py+r/EfD//wrq/f8G6v3/Bub9/xPj
        /P8K6f//HaHb/yKd7f8Fzfz/BdT9/wHW/v8E1Pv/A9P9/wPS/f8Urd7/C5vj/w50vP8VHTP/GylE/w4Z
        Nv8UUKT/DK3//xix2P8B3///ANf7/wXX+/8D3v7/DsDk/xql3/+P0v//Sdf5/wDs//8P3PP/DeX7/wfo
        //8H6v//BuX//wbe/f8dh8v/E3/c/xKo5v8ZnMn/Cc/6/wHX//8D1///A9b9/xOl2v8Snen/EkVt/xY4
        aP8PGDD/BBQ9/xsrV/8ahMj/I5LG/w7I8v8E2v7/F6/Q/w7N8v8Loej/HXXh/0uK6P8hmez/BMT7/xWs
        0v8L0/D/AeT//xW73/8Ly/X/DKHw/waH+/8Eh/3/CYTw/w+v8f8Mxvj/E6XX/w+04/8F2v//GXyz/xdV
        fP8JDyH/DkSL/yEmRf8CBRz/GSdA/xYdPv8TKlb/FKfp/wjB+/8LofX/DInt/wl86/8PWMz/C021/waa
        //8Ynez/Mb3n/yzD5/8gueP/F5zm/wx13P8SY8T/DKj1/xCd8f8JkPf/Ao36/wam/P8RoN//D6ji/xOS
        xv8VLE//DQMK/xRXg/8Hd9j/Gz13/wkFCv8GBgv/HCdE/w90t/8Pufv/BZj1/wSX/f8OqvL/HaPa/xuM
        zf8Uecz/IK3d/yG83P8U0O7/Ecvw/xfE6P8drdr/E43k/xh7v/8dt+L/GLDl/x6k3P8cnub/Cpn7/wZ1
        3/8QhMr/DSI5/w4IEf8RGiz/FTNL/weY/P8Pgub/Dx48/wAAAP8UM1X/Fs///wei9P8VsPv/GLrp/x+o
        2/8LuPT/B7n//x+T0/8fps//B9j8/wHX//8A3P//ANj//wnI9v8mj83/HaX6/wbB+f8JvvP/A7/9/xGo
        6f8kntn/CqL2/wyF3v8QN1L/CwUH/w8SGv8LBQT/CLH9/wex//8QW6r/BgEF/w0zPP8YxPv/CLX7/x7N
        8P8Yq93/BcH//wK9//8Imun/FnzX/w26+P8VqNf/DsX0/xW04P8Kxff/C6vn/zJ1uv8zj+7/E47X/xeb
        z/8Dw///ALz//w+q7/8bpeD/C5Hw/xEhRf8PDhD/Bwss/wcTNv8Ud7b/CcD//wtuxf8QCyH/FC06/xii
        8/8Suu3/GZrO/w+18P8EtPb/DKjr/xVeqf8TNoj/DW3U/wua9P8Mr/T/E6Th/w6Z6v8HjvH/EVuw/wpf
        xv8Gf+3/BY73/xKFz/8XhL//CLP5/yF/u/8TRXD/Dw4X/xkpRf8UOnn/FENz/xISIP8Paaj/C37S/xE0
        ef8SER//IIu+/xTL//8Jufn/GoC4/xWGwv8Um9z/G3+5/xJUnP8Xi9//F5/j/xSg4v8Toub/F5fd/xiL
        2P8QY7T/FILR/xaM2v8XhNr/EYHc/w9fuv8MZ67/Ci1P/wgAAP8UGR//CBIg/wcOFv8IBwf/DhM1/xAO
        JP8Ri9//CYvs/wUUP/8NFBT/El2H/wqc6P8InPL/EJbs/xiDvf8MgLr/D0uH/xpin/8Ql9f/BaPo/wWf
        4f8Ml9P/F3er/w9bnf8XW5L/D5fY/xGP1v8Th8n/GHq9/xBFif8LLlb/CAYI/w4cLP8HDxj/AQAA/wEB
        A/8FCz7/CAMR/xJDcP8Jrf//C2S6/wIAC/8HBxT/DZvv/waW/v8Xhsr/CXCs/wtNgP8KQnr/BkeH/wtR
        mf8PVJf/DF+j/wtNi/8ISIL/BR5Y/ww1fP8IWp3/ClmX/wllp/8Lb6//FEp4/xAiSf8HBQf/Bx86/wgj
        SP8GGTf/BRUx/wMGEf8CAg//CAMI/w1sr/8MiNj/CiZe/wgOGv8Se9T/C4Hs/xFgl/8IRHT/Ci9c/wZO
        hf8HPnj/DS9z/w9Ijf8NQn//DT6B/wkkX/8HD0H/DTF+/wwwd/8MKW7/DCBd/wwjTf8HHzv/CAsV/wUH
        Dv8FFDT/AhEx/wMRMv8EDiz/AQAA/wMFDf8FBA//CxMn/wxDhv8KJmH/CQMK/xIpQv8OTI7/DixO/wcT
        Nf8FKVf/Aztk/wc0ZP8NOmf/CUx5/wZKef8JSXX/DiJF/wkdSP8LPW3/DypP/w80ZP8LK17/CRZF/wUA
        Cf8DAAD/AwYX/wEEHv8BAhf/AgMa/wEDFv8DBA7/BQwn/wQRNP8KChf/ECFU/wobVP8DAhj/AAAA/wUA
        AP8HAQD/BAYX/wMWQP8BJEb/AyZO/wQkT/8HIEH/BiRG/wcfRP8HHD//BR5D/wYWO/8IEzb/BRI2/wcU
        Mf8GDSP/AwMI/wEEB/8DAhr/AQMW/wECDP8BAQ//AAEJ/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>